server <- function(input, output, session) {
  current_page <- reactiveVal("intro")
  
  
  # üîÑ Navigation
  observeEvent(input$next_intro, current_page(themes[1]))
  for (i in seq_along(themes[-length(themes)])) {
    observeEvent(input[[paste0("next_", themes[i])]], current_page(themes[i + 1]))
  }
  observeEvent(input$next_submit, current_page("submit"))
  observeEvent(input$back_submit, current_page(themes[length(themes)]))
  
  # üß± Affichage dynamique
  output$main_ui <- renderUI({
    page <- as.character(current_page())
    theme_questions <- filter(questions_list, Theme == page)
    
    if (page == "intro") {
      # --- Page d'accueil / introduction ---
      tagList(
        # --- Bandeau orange ---
        div(
          class = "page-layout-custom",
          style = "
      background-color: #ef7757 !important;
      padding-top: 5%;
      margin-top: -2%;
      padding-bottom: 3%;
      font-family: 'Source Sans Pro', sans-serif;
    ",
          div(
            style = "color:white; margin-left:10%; font-size: 2.4em; margin-top: 1%; font-weight: bold;",
            "Diagnostic Flash"
          ),
          div(
            style = "color:white; margin-left:10%; font-size: 2.1em; font-weight: bold; margin-top:1%;",
            '"Transition et adaptation au changement climatique"'
          ),
          tags$br(),
          div(
            style = "color:white; margin-left:10%; font-size: 1.8em; font-weight: bold; margin-bottom: 0.5%; margin-top: 2%;",
            "Pr√©parez l'entretien d'√©changes avec votre r√©f√©rent Cerema en √©tablissant un √©tat des lieux"
          ),
          div(
            style = "color:white; margin-left:10%; font-size: 1.8em; font-weight: bold; margin-top: -9px;",
            "des forces et des besoins de votre territoire."
          ),
          actionButton(
            "next_intro", "Commencer",
            class = "btn btn-bounce",
            style = "
          margin-left: 10%;
          box-shadow: inset 1px 1px 3px #712929, inset -1px -1px 3px #ccc7c7;
          border-radius: 8px;
          font-weight: bold;
          font-size: 1.5em;
          margin-top: 40px;
          background-color: rgba(239,119,87,1);
          border: none;
        "
          )
        ),
        
        # --- Container avec colonnes ---
        div(
          class = "container",
          style = "display:flex; justify-content:space-between;width:auto; align-items:flex-start; margin:0 5%;margin-bottom:5%;",
          
          # Colonne gauche
          div(
            class = "left-column",
            style = "flex:1;margin-top:auto;",
            div(
              class = "info-block",
              tags$img(src = "main_pomme.png", alt = "Pomme", style = "width:120px; margin-right:15px;"),
              div(
                class = "info-text",
                tags$h3("Disposer d'un √©tat des lieux"),
                tags$h4("R√©pondez √† quelques questions et recevez votre rapport avec un premier niveau de recommandations du Cerema.")
              )
            ),
            div(
              class = "info-block",
              tags$img(src = "cible.png", alt = "Cible", style = "width:120px; margin-right:15px;"),
              div(
                class = "info-text",
                tags$h3("D√©terminer vos priorit√©s"),
                tags$h4("Sur la base de ce rapport, √©tablissez vos priorit√©s d'actions et d√©finissez, avec votre r√©f√©rent Cerema, les solutions mobilisables.")
              )
            ),
            div(
              class = "info-block",
              tags$img(src = "ecran.png", alt = "√âcran", style = "width:120px; margin-right:15px;"),
              div(
                class = "info-text",
                tags$h3("Faciliter le passage √† l'action"),
                tags$h4("B√©n√©ficiez, par th√©matique, d'une bo√Æte √† outils et de retours d'exp√©riences inspirants.")
              )
            )
          ),
          
          # Colonne droite
          div(
            class = "right-column",
            style = "flex:1; text-align:center;",
            tags$img(src = "image_diag.png", alt = "Image droite", style = "max-width:100%; height:auto;")
          )
        ),tags$footer(
          style = "
                  position: fixed;
                  bottom: 0;
                  left: 0;
                  width: 100%;
                  padding: 10px 5%;
                  background: #f9f9f9;
                  border-top: 1px solid #ddd;
                  display: flex;
                  justify-content: space-between;
                  align-items: center;
                  font-size: 1.1rem;
                  color: #666;
                  z-index: 1000;
                ",
          div("Site cr√©√© avec ¬ÆRStudio"),
          div("¬© Cerema"),
          div(
            tags$a(href="https://fr.linkedin.com/company/cerema", target="_blank",
                   icon("linkedin", lib="font-awesome"), style="margin:0 8px; font-size:1.5rem; color:#0e76a8;"),
            tags$a(href="https://x.com/ceremacom", target="_blank",
                   icon("twitter", lib="font-awesome"), style="margin:0 8px; font-size:1.5rem; color:#000;"),
            tags$a(href="https://www.youtube.com/@cerema3139", target="_blank",
                   icon("youtube", lib="font-awesome"), style="margin:0 8px; font-size:1.5rem; color:#c4302b;")
          )
        )
        
      )
    } else {
      
        
      texte_theme <- NA_character_
      if ("TexteTheme" %in% names(theme_questions)) {
        tmp <- theme_questions$TexteTheme
        tmp <- tmp[!is.na(tmp)]
        if (length(tmp) > 0) {
          texte_theme <- as.character(tmp[1])
        }
      }
      
      # Traitement du texte avec || comme s√©parateur
      texte_blocs <- if (!is.null(texte_theme) && is.character(texte_theme) && !is.na(texte_theme)) {
        unlist(strsplit(texte_theme, "\\|\\|")) |> trimws()
      } else {
        character(0)
      }
      
      
      # Le premier bloc est affich√© comme paragraphe, les suivants comme liste
      texte_intro <- if (length(texte_blocs) > 0) {
        tags$p(HTML(gsub("\n", "<br>", texte_blocs[1])),
               style = "font-size:1.9rem;")
      }
      
      texte_liste <- if (length(texte_blocs) > 1) {
        tags$ul(
          lapply(texte_blocs[-1], function(item) {
            tags$li(item)
          }),
          style = "margin-left:20px; font-size:1.9rem;"
        )
      }
      
      
      generateProgressBar <- function(theme_questions) {
        themes <- unique(theme_questions$Theme)
        labels <- unique(theme_questions$Theme) # ou ThemeName si tu pr√©f√®res
        
        tags$div(
          id = "progress-bar",
          class = "progress-bar",
          lapply(seq_along(themes), function(i) {
            tags$div(
              class = "progress-item",
              `data-step` = themes[i],
              tags$div(class = "circle", themes[i]),
              tags$span(class = "label", HTML(labels[i]))
            )
          })
        )
      }
      tagList(
        tags$div(
          fluidRow(
            column(12,
          id = "progress-bar",
          class = "progress-bar",
          style = "margin-left: 0; margin-right: 0; padding: 0 2%;", # ou 0 si tu veux pleine largeur
          generateProgressBar(theme_questions)
                  )
                  )
          ),
    div(class = "mise_en_page",
        fluidRow(
          column(12,
            # --- Mention obligatoire ---
            div(
              style="color: red; font-size:1.2rem; margin-top: 15px; margin-bottom: 40px; margin-left: -58px;",
              "*Champs obligatoires",
              class="champs_obligatoires"
            ),
            
            # --- Th√®me et texte associ√© ---
            tagList(
              h3(
                paste(page),
                style = "color:#293574;margin-left:5%;font-weight: bold;"
              ),
              if (!is.null(texte_theme) && !is.na(texte_theme) && nzchar(texte_theme)) {
                tags$div(
                  
                  texte_intro,
                  texte_liste
                ,style = "margin-left:5%; font-size:1.7rem; color:#293574; margin-bottom:44px; margin-top:40px;font-weight: bold;
                          font-family: Source Sans Pro;"
                )
              }
            ),
            
            # --- G√©n√©ration dynamique des questions ---
            lapply(seq_len(nrow(theme_questions)), function(i) {
              q <- theme_questions[i, ]
              numero     <- as.character(q$Numero)
              question   <- q$Questions
              style      <- ifelse(is.na(q$Style), "radio", q$Style)
              condition  <- if ("Condition" %in% names(q)) q$Condition else NA
              parent_col <- if ("Parent" %in% names(q)) q$Parent else NA
              remplace <- if ("Remplace" %in% names(q)) q$Remplace else NA
              is_replacement <<- !is.na(remplace) && nzchar(remplace)
              reponses <- q$reponses[[1]]
              has_parent <- !is.na(parent_col) && parent_col != "" && parent_col != "NA"
              is_replaced <- numero %in% theme_questions$Remplace
              is_conditional <- has_parent
              
              # --- Commentaire √©ventuel [ ... ] ---
              commentaire <- stringr::str_extract(question, "\\[.*?\\]")
              question_sans_commentaire <- stringr::str_replace(question, "\\[.*?\\]", "")
              if (!is.na(commentaire)) {
                commentaire <- stringr::str_replace_all(commentaire, "\\[|\\]", "")
                tooltip_html <- sprintf(
                  "<span class='tooltip'><span class='icon'>i</span><span class='tooltiptext'>%s</span></span>",
                  commentaire
                )
              } else {
                tooltip_html <- ""
              }
              
              div(
                id = paste0("q", numero),
                # Important : 'conditional' reste pour la S√âLECTION JS
                class = if (is_conditional) c("question-block", "conditional") else "question-block",
                `data-parent-question` = if (is_conditional) paste0("q", parent_col) else NULL,
                `data-condition` = if (is_conditional && !is.na(condition) && nzchar(condition)) condition else NULL,
                `data-replace` = if (is_replacement) paste0("q", remplace) else NULL,
                
                # MODIFICATION CL√â : Le style initial est UNIFORME et SANS 'display:none'
                style = "margin:20px 0; padding:15px; margin-left:4%; margin-right:4%;",
              
                
                tags$p(HTML(sprintf(
                  "<strong style='font-size:1.6rem; color:#293574;'>%s</strong> %s <span style='color:red;'>*</span>",
                  question_sans_commentaire, tooltip_html
                ))),
                
                switch(style,
                       "radio" = tagList(
                         lapply(seq_along(reponses), function(j) {
                           id <- paste0("q", numero, "_", j)
                           val <- trimws(gsub("&nbsp;", "", reponses[j]))
                           tags$div(
                             class = "custom-radio", style = "display:contents;",
                             tags$input(
                               type = "radio", id = id, name = paste0("q", numero),
                               value = val, required = if (j == 1) NA else NULL
                             ),
                             tags$label(`for` = id, val)
                           )
                         })
                       ),
                       "checkbox" = tagList(
                         lapply(seq_along(reponses), function(j) {
                           id <- paste0("q", numero, "_", j)
                           val <- trimws(gsub("&nbsp;", "", reponses[j]))
                           
                           # R√©cup√©rer StyleDetail si pr√©sent
                           style_detail <- ifelse("Affichage" %in% names(q), q$Affichage, NA)
                           
                           tags$div(
                             class = "custom-checkbox",
                             style = if (!is.na(style_detail) && style_detail == "inline-block") {
                               # Cas particulier ‚Üí inline-block
                               "display: inline-block; margin-right:15px; margin-top:10px; color: #293574; font-weight: bold; opacity: 0.95;"
                             } else {
                               # Cas g√©n√©ral ‚Üí flex
                               "display: flex; align-items: flex-start; gap: 12px; margin: 10px 0; color: #293574; font-weight: bold; opacity: 0.95;"
                             },
                             
                             tags$input(
                               type = "checkbox",
                               id = id,
                               name = paste0("q", numero),
                               value = val,
                               style = "transform: scale(1.3); margin-top: 4px; cursor: pointer; border-color: rgba(239,119,87,1);"
                             ),
                             tags$label(
                               `for` = id,
                               val,
                               style = "font-size: 1.6rem; font-weight: bold; margin-left: 8px; line-height: 1.4; max-width: 90%; word-break: break-word;"
                             )
                           )
                         })
                       ),
                       "textarea" = tags$textarea(
                         name = paste0("q", numero), rows = 4, cols = 50, required = NA,
                         style = "width:100%; margin-top:6px; color:#293574; font-weight:bold; opacity:0.9;border:2px solid rgba(239,119,87,1);"
                       ),
                       "textarea-alt" = tags$textarea(
                         name = paste0("q", numero), rows = 4, cols = 50, required = NA,
                         style = "width:100%; margin-top:6px; color:#293574; font-weight:bold; opacity:0.9;border:2px solid rgba(239,119,87,1);
                                  height:35px;"
                       ),
                       "select" = tags$select(
                         name = paste0("q", numero), required = NA,
                         style = "width:100%; margin-top:6px; border:2px solid rgba(239,119,87,1); border-radius:6px; height:35px; color:#293574; font-weight:bold; opacity:0.9;
                         font-size: 1.9rem;font-family: Apple Chancery;padding-left:10px;",
                         lapply(reponses, function(r) {
                           val <- trimws(gsub("&nbsp;", "", r))
                           tags$option(value = val, val)
                         })
                       )
                )
              )
            })
          )
        )
    )
      )
            }
    })
  
  output$footer_conditional <- renderUI({
    if (as.character(current_page()) != "intro") {
      tagList(
        tags$br(), tags$br(), tags$br(), tags$br(),
        uiOutput("footer")
      )
    } else {
      NULL  # rien affich√© sur la page intro
    }
  })
  
  
  output$footer <- renderUI({
    p <- current_page()
    
    div(
      id = "footer",
      style = "position:fixed; bottom:0; left:0; width:100%;
             background:white; border-top:2px solid #EF7757; 
             padding:10px 20px; z-index:1000;",
      
      # ligne dots + bouton
      div(
        id = "footer-dots-container",
        style = "display:flex; align-items:center; justify-content:space-between;",
        
        # dots au centre
        div(
          style = "flex-grow:1; text-align:center;",
          includeHTML("www/custom_footer.html")
        ),
        
        # bouton √† droite
        div(
          class = "right-btn",
          if (!is.null(p) && p == themes[length(themes)]) {
            actionButton(
              "next_submit", "Soumettre",
              style = "background-color:#ef7757;color:white;border:none;
                     padding:10px 20px;border-radius:6px;font-size:1rem;"
            )
          } else {
            actionButton(
              paste0("next_", p), "Suivant >",
              style = "background-color:#ef7757;color:white;border:none;
                     padding:10px 20px;border-radius:6px;font-size:1.6rem;"
            )
          }
        )
      ),
      
      # ligne texte en dessous
      # ligne texte + ic√¥nes en dessous
      div(
        style = "margin-top:15px;
           display:flex; 
           align-items:center; 
           justify-content:space-between;
           font-size:1.2rem; color:#666;",
        
        # gauche
        div("Site cr√©√© avec ¬ÆRStudio"),
        
        # centre
        div("¬©Cerema"),
        
        # droite
        div(
          class = "footer-social",
          
          tags$a(
            href = "https://fr.linkedin.com/company/cerema",
            target = "_blank",
            icon("linkedin", lib = "font-awesome"),
            style = "margin:0 10px; font-size:1.6rem; color:#0e76a8;"
          ),
          tags$a(
            href = "https://x.com/ceremacom",
            target = "_blank",
            icon("twitter", lib = "font-awesome"),
            style = "margin:0 10px; font-size:1.6rem; color:#000;"
          ),
          tags$a(
            href = "https://www.youtube.com/@cerema3139",
            target = "_blank",
            icon("youtube", lib = "font-awesome"),
            style = "margin:0 10px; font-size:1.6rem; color:#c4302b;"
          )
        )
      )
    )
  })
  
  observe({
    lapply(themes, function(th) {
      observeEvent(input[[paste0("next_", th)]], {
        current_index <- which(themes == th)
        if (current_index < length(themes)) {
          current_page(themes[current_index + 1])
        }
      })
    })
  })
  
  
  
  # üì§ Traitement des r√©ponses
  observeEvent(input$submit_btn, {
    responses <- lapply(questions_list$Numero, function(numero) {
      input[[paste0("q", numero)]]
    })
    print(responses)
    showModal(modalDialog("R√©ponses enregistr√©es. Merci !"))
  })
}